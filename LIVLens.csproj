<?xml version="1.0" encoding="utf-8"?>
<Project Sdk="Microsoft.NET.Sdk.Web">
	<PropertyGroup>
		<TargetFramework>net6.0</TargetFramework>
		<Nullable>enable</Nullable>
		<IsPackable>false</IsPackable>
		<SpaRoot>ClientApp\</SpaRoot>
		<SpaProxyServerUrl>https://localhost:44417</SpaProxyServerUrl>
		<SpaProxyLaunchCommand>npm start</SpaProxyLaunchCommand>
		<ImplicitUsings>enable</ImplicitUsings>
	</PropertyGroup>
	<PropertyGroup Condition=" '$(Configuration)|$(Platform)' == 'Debug|AnyCPU' ">
		<WarningLevel>4</WarningLevel>
	</PropertyGroup>
	<ItemGroup>
		<PackageReference Include="Microsoft.AspNetCore.SpaProxy" Version="6.0.8" />
		<PackageReference Include="Microsoft.EntityFrameworkCore" Version="6.0.8" />
		<PackageReference Include="Microsoft.EntityFrameworkCore.Tools" Version="6.0.8">
			<IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
			<PrivateAssets>all</PrivateAssets>
		</PackageReference>
		<PackageReference Include="Microsoft.VisualStudio.Web.CodeGeneration.Design" Version="6.0.8" />
		<PackageReference Include="Pomelo.EntityFrameworkCore.MySql" Version="6.0.2" />
		<PackageReference Include="Microsoft.AspNetCore.Authentication.JwtBearer" Version="6.0.8" />
		<PackageReference Include="NSwag.AspNetCore" Version="13.16.1" />
		<PackageReference Include="NSwag.MSBuild" Version="13.16.1">
			<IncludeAssets>runtime; build; native; contentfiles; analyzers; buildtransitive</IncludeAssets>
			<PrivateAssets>all</PrivateAssets>
		</PackageReference>
	</ItemGroup>
	<ItemGroup>
		<!-- Don't publish the SPA source files, but do show them in the project files list -->
		<Content Remove="$(SpaRoot)**" />
		<None Include="$(SpaRoot)**" Exclude="$(SpaRoot)node_modules\**" />
	</ItemGroup>
	<ItemGroup>
		<None Remove="Microsoft.EntityFrameworkCore" />
		<None Remove="MySql.EntityFrameworkCore" />
		<None Remove="Services\" />
		<None Remove="Interfaces\" />
		<None Remove="Models\" />
		<None Remove="Microsoft.AspNetCore.Authentication.JwtBearer" />
		<None Remove="Security\" />
		<None Remove="NSwag.AspNetCore" />
		<None Remove="NSwag.MSBuild" />
		<None Remove="ClientApp\dist\polyfills.e02eca798f0e2446.js" />
		<None Remove="ClientApp\dist\index.html" />
		<None Remove="ClientApp\dist\runtime.3ab7c7c911c1916a.js" />
		<None Remove="ClientApp\dist\3rdpartylicenses.txt" />
		<None Remove="ClientApp\dist\styles.eb8e17e88dc46d8c.css" />
		<None Remove="ClientApp\dist\main.bf19e3f82f2893ff.js" />
	</ItemGroup>
	<ItemGroup>
		<Folder Include="Services\" />
		<Folder Include="Interfaces\" />
		<Folder Include="Models\" />
		<Folder Include="Security\" />
	</ItemGroup>
	<Target Name="DebugEnsureNodeEnv" BeforeTargets="Build" Condition=" '$(Configuration)' == 'Debug' And !Exists('$(SpaRoot)node_modules') ">
		<!-- Ensure Node.js is installed -->
		<Exec Command="node --version" ContinueOnError="true">
			<Output TaskParameter="ExitCode" PropertyName="ErrorCode" />
		</Exec>
		<Error Condition="'$(ErrorCode)' != '0'" Text="Node.js is required to build and run this project. To continue, please install Node.js from https://nodejs.org/, and then restart your command prompt or IDE." />
		<Message Importance="high" Text="Restoring dependencies using 'npm'. This may take several minutes..." />
		<Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
	</Target>
	<Target Name="PublishRunWebpack" AfterTargets="ComputeFilesToPublish">
		<!-- As part of publishing, ensure the JS resources are freshly built in production mode -->
		<Exec WorkingDirectory="$(SpaRoot)" Command="npm install" />
		<Exec WorkingDirectory="$(SpaRoot)" Command="npm run build -- --prod" />
		<!-- Include the newly-built files in the publish output -->
		<ItemGroup>
			<DistFiles Include="$(SpaRoot)dist\**; $(SpaRoot)dist-server\**" />
			<ResolvedFileToPublish Include="@(DistFiles-&gt;'%(FullPath)')" Exclude="@(ResolvedFileToPublish)">
				<RelativePath>wwwroot\%(RecursiveDir)%(FileName)%(Extension)</RelativePath>
				<CopyToPublishDirectory>PreserveNewest</CopyToPublishDirectory>
				<ExcludeFromSingleFile>true</ExcludeFromSingleFile>
			</ResolvedFileToPublish>
		</ItemGroup>
	</Target>
	<PropertyGroup>
		<RunPostBuildEvent>OnBuildSuccess</RunPostBuildEvent>
	</PropertyGroup>
	<Target Name="NSwag" AfterTargets="PostBuildEvent" Condition=" '$(Configuration)' == 'Debug' ">
		<Exec WorkingDirectory="$(ProjectDir)" EnvironmentVariables="ASPNETCORE_ENVIRONMENT=Development" Command="$(NSwagExe_Net60) run nswag.json /variables:Configuration=$(Configuration)" />
	</Target>
</Project>